/**
 * Prisma client singleton to ensure only one instance is used across the application
 * This avoids connection limit issues and improves performance
 *
 * Generated by Copilot
 */
import { PrismaClient } from "@prisma/client";

// Define a global variable to store the Prisma instance
const globalForPrisma = globalThis as unknown as { prisma: PrismaClient };

// Create the Prisma client singleton
export const prisma =
  globalForPrisma.prisma ||
  new PrismaClient({
    log:
      process.env.NODE_ENV === "development"
        ? ["query", "error", "warn"]
        : ["error"],
  });

// If we're not in production, add prisma to the global object to preserve it between hot reloads
if (process.env.NODE_ENV !== "production") {
  globalForPrisma.prisma = prisma;
}
